{"ast":null,"code":"import _objectSpread from \"C:/Users/enliv/Desktop/appstack-react-2-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\enliv\\\\Desktop\\\\appstack-react-2-master\\\\src\\\\pages\\\\tables\\\\ColumnSorting.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useTable, useSortBy } from \"react-table\";\nimport { Card, Container, Table } from \"react-bootstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faSort, faSortUp, faSortDown } from \"@fortawesome/free-solid-svg-icons\";\nimport { tableData, tableColumns } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ColumnSortingTable = function ColumnSortingTable(_ref) {\n  _s();\n\n  var columns = _ref.columns,\n      data = _ref.data;\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data\n  }, useSortBy),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow;\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"Column Sorting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        children: \"Column sorting by react-table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Table, _objectSpread(_objectSpread({\n        striped: true,\n        bordered: true\n      }, getTableProps()), {}, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(function (headerGroup) {\n            return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n              children: headerGroup.headers.map(function (column) {\n                return (\n                  /*#__PURE__*/\n                  // Add the sorting props to control sorting. For this example\n                  // we can add them into the header props\n                  _jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps(column.getSortByToggleProps())), {}, {\n                    children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"span\", {\n                      children: column.isSorted ? column.isSortedDesc ? /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faSortUp,\n                        className: \"ms-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 47,\n                        columnNumber: 14\n                      }, _this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faSortDown,\n                        className: \"ms-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 49,\n                        columnNumber: 14\n                      }, _this) : /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n                        icon: faSort,\n                        className: \"ms-2\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 52,\n                        columnNumber: 13\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 44,\n                      columnNumber: 11\n                    }, _this)]\n                  }), void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 41,\n                    columnNumber: 10\n                  }, _this)\n                );\n              })\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 8\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n          children: rows.map(function (row, i) {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n              children: row.cells.map(function (cell) {\n                return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                  children: cell.render(\"Cell\")\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 12\n                }, _this);\n              })\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 9\n            }, _this);\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 6\n        }, _this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(ColumnSortingTable, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n});\n\n_c = ColumnSortingTable;\n\nvar ColumnSorting = function ColumnSorting() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Column Sorting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-3\",\n        children: \"Column Sorting\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 4\n      }, _this), /*#__PURE__*/_jsxDEV(ColumnSortingTable, {\n        columns: tableColumns,\n        data: tableData.slice(0, 15)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 4\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 2\n  }, _this);\n};\n\n_c2 = ColumnSorting;\nexport default ColumnSorting;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ColumnSortingTable\");\n$RefreshReg$(_c2, \"ColumnSorting\");","map":{"version":3,"sources":["C:/Users/enliv/Desktop/appstack-react-2-master/src/pages/tables/ColumnSorting.tsx"],"names":["React","Helmet","useTable","useSortBy","Card","Container","Table","FontAwesomeIcon","faSort","faSortUp","faSortDown","tableData","tableColumns","ColumnSortingTable","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","row","i","getRowProps","cells","cell","getCellProps","ColumnSorting","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useTable, useSortBy } from \"react-table\";\r\n\r\nimport { Card, Container, Table } from \"react-bootstrap\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n\tfaSort,\r\n\tfaSortUp,\r\n\tfaSortDown,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nimport { tableData, tableColumns } from \"./data\";\r\n\r\nconst ColumnSortingTable = ({ columns, data }) => {\r\n\tconst { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n\t\tuseTable(\r\n\t\t\t{\r\n\t\t\t\tcolumns,\r\n\t\t\t\tdata,\r\n\t\t\t},\r\n\t\t\tuseSortBy\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Card.Header>\r\n\t\t\t\t<Card.Title>Column Sorting</Card.Title>\r\n\t\t\t\t<h6 className=\"card-subtitle text-muted\">\r\n\t\t\t\t\tColumn sorting by react-table\r\n\t\t\t\t</h6>\r\n\t\t\t</Card.Header>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Table striped bordered {...getTableProps()}>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t{headerGroups.map((headerGroup) => (\r\n\t\t\t\t\t\t\t<tr {...headerGroup.getHeaderGroupProps()}>\r\n\t\t\t\t\t\t\t\t{headerGroup.headers.map((column: any) => (\r\n\t\t\t\t\t\t\t\t\t// Add the sorting props to control sorting. For this example\r\n\t\t\t\t\t\t\t\t\t// we can add them into the header props\r\n\t\t\t\t\t\t\t\t\t<th {...column.getHeaderProps(column.getSortByToggleProps())}>\r\n\t\t\t\t\t\t\t\t\t\t{column.render(\"Header\")}\r\n\t\t\t\t\t\t\t\t\t\t{/* Add a sort direction indicator */}\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t{column.isSorted ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\tcolumn.isSortedDesc ? (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faSortUp} className=\"ms-2\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faSortDown} className=\"ms-2\" />\r\n\t\t\t\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t\t\t\t<FontAwesomeIcon icon={faSort} className=\"ms-2\" />\r\n\t\t\t\t\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody {...getTableBodyProps()}>\r\n\t\t\t\t\t\t{rows.map((row, i) => {\r\n\t\t\t\t\t\t\tprepareRow(row);\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr {...row.getRowProps()}>\r\n\t\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nconst ColumnSorting = () => (\r\n\t<React.Fragment>\r\n\t\t<Helmet title=\"Column Sorting\" />\r\n\t\t<Container fluid className=\"p-0\">\r\n\t\t\t<h1 className=\"h3 mb-3\">Column Sorting</h1>\r\n\r\n\t\t\t<ColumnSortingTable\r\n\t\t\t\tcolumns={tableColumns}\r\n\t\t\t\tdata={tableData.slice(0, 15)}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default ColumnSorting;\r\n"]},"metadata":{},"sourceType":"module"}