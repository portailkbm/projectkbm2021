{"ast":null,"code":"import _slicedToArray from \"C:/Users/enliv/Desktop/appstack-react-2-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport { THEME, THEME_PALETTE_LIGHT, THEME_PALETTE_DARK } from \"../constants\";\nimport useTheme from \"./useTheme\";\n\nvar usePalette = function usePalette() {\n  _s();\n\n  var _useTheme = useTheme(),\n      theme = _useTheme.theme;\n\n  var _useState = useState(THEME_PALETTE_LIGHT),\n      _useState2 = _slicedToArray(_useState, 2),\n      palette = _useState2[0],\n      setPalette = _useState2[1];\n\n  useEffect(function () {\n    if (theme === THEME.DARK) {\n      setPalette(THEME_PALETTE_DARK);\n    } else {\n      setPalette(THEME_PALETTE_LIGHT);\n    }\n  }, [theme]);\n  return palette;\n};\n\n_s(usePalette, \"QtNkZSlYnljpn78Dx8JXHSSIf/k=\", false, function () {\n  return [useTheme];\n});\n\nexport default usePalette;","map":{"version":3,"sources":["C:/Users/enliv/Desktop/appstack-react-2-master/src/hooks/usePalette.tsx"],"names":["useState","useEffect","THEME","THEME_PALETTE_LIGHT","THEME_PALETTE_DARK","useTheme","usePalette","theme","palette","setPalette","DARK"],"mappings":";;;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AAEA,SAASC,KAAT,EAAgBC,mBAAhB,EAAqCC,kBAArC,QAA+D,cAA/D;AAEA,OAAOC,QAAP,MAAqB,YAArB;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACxB,kBAAkBD,QAAQ,EAA1B;AAAA,MAAQE,KAAR,aAAQA,KAAR;;AAEA,kBAA8BP,QAAQ,CAACG,mBAAD,CAAtC;AAAA;AAAA,MAAOK,OAAP;AAAA,MAAgBC,UAAhB;;AAEAR,EAAAA,SAAS,CAAC,YAAM;AACf,QAAIM,KAAK,KAAKL,KAAK,CAACQ,IAApB,EAA0B;AACzBD,MAAAA,UAAU,CAACL,kBAAD,CAAV;AACA,KAFD,MAEO;AACNK,MAAAA,UAAU,CAACN,mBAAD,CAAV;AACA;AACD,GANQ,EAMN,CAACI,KAAD,CANM,CAAT;AAQA,SAAOC,OAAP;AACA,CAdD;;GAAMF,U;UACaD,Q;;;AAenB,eAAeC,UAAf","sourcesContent":["import { useState, useEffect } from \"react\";\r\n\r\nimport { THEME, THEME_PALETTE_LIGHT, THEME_PALETTE_DARK } from \"../constants\";\r\n\r\nimport useTheme from \"./useTheme\";\r\n\r\nconst usePalette = () => {\r\n\tconst { theme } = useTheme();\r\n\r\n\tconst [palette, setPalette] = useState(THEME_PALETTE_LIGHT);\r\n\r\n\tuseEffect(() => {\r\n\t\tif (theme === THEME.DARK) {\r\n\t\t\tsetPalette(THEME_PALETTE_DARK);\r\n\t\t} else {\r\n\t\t\tsetPalette(THEME_PALETTE_LIGHT);\r\n\t\t}\r\n\t}, [theme]);\r\n\r\n\treturn palette;\r\n};\r\n\r\nexport default usePalette;\r\n"]},"metadata":{},"sourceType":"module"}