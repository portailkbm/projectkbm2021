{"ast":null,"code":"import _toConsumableArray from \"C:/Users/enliv/Desktop/appstack-react-2-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:/Users/enliv/Desktop/appstack-react-2-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"C:/Users/enliv/Desktop/appstack-react-2-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _excluded = [\"indeterminate\"];\n\nvar _jsxFileName = \"C:\\\\Users\\\\enliv\\\\Desktop\\\\appstack-react-2-master\\\\src\\\\pages\\\\tables\\\\RowSelection.tsx\",\n    _this = this,\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useTable, useRowSelect } from \"react-table\";\nimport { Card, Container, Table } from \"react-bootstrap\";\nimport { tableData, tableColumns } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar IndeterminateCheckbox = /*#__PURE__*/React.forwardRef(_c = _s(function (_ref, ref) {\n  _s();\n\n  var indeterminate = _ref.indeterminate,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var defaultRef = React.useRef();\n  var resolvedRef = ref || defaultRef;\n  React.useEffect(function () {\n    resolvedRef.current.indeterminate = indeterminate;\n  }, [resolvedRef, indeterminate]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n      type: \"checkbox\",\n      ref: resolvedRef\n    }, rest), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }, _this)\n  }, void 0, false);\n}, \"ouw4KVvDKeit07oEcYWUcp3TdOA=\"));\n_c2 = IndeterminateCheckbox;\n\nvar RowSelectionTable = function RowSelectionTable(_ref2) {\n  _s2();\n\n  var columns = _ref2.columns,\n      data = _ref2.data;\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data\n  }, useRowSelect, function (hooks) {\n    hooks.visibleColumns.push(function (columns) {\n      return [// Let's make a column for selection\n      {\n        id: \"selection\",\n        // The header can use the table's getToggleAllRowsSelectedProps method\n        // to render a checkbox\n        Header: function Header(_ref3) {\n          var getToggleAllRowsSelectedProps = _ref3.getToggleAllRowsSelectedProps;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, _objectSpread({}, getToggleAllRowsSelectedProps()), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 9\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 8\n          }, _this);\n        },\n        // The cell can use the individual row's getToggleRowSelectedProps method\n        // to the render a checkbox\n        Cell: function Cell(_ref4) {\n          var row = _ref4.row;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(IndeterminateCheckbox, _objectSpread({}, row.getToggleRowSelectedProps()), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 9\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 8\n          }, _this);\n        }\n      }].concat(_toConsumableArray(columns));\n    });\n  }),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow;\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"Row Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        children: \"Row selection by react-table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Table, _objectSpread(_objectSpread({\n        striped: true,\n        bordered: true\n      }, getTableProps()), {}, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(function (headerGroup) {\n            return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n              children: headerGroup.headers.map(function (column) {\n                return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n                  children: column.render(\"Header\")\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 10\n                }, _this);\n              })\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 8\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n          children: rows.map(function (row, i) {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n              children: row.cells.map(function (cell) {\n                return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                  children: cell.render(\"Cell\")\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 12\n                }, _this);\n              })\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 9\n            }, _this);\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 6\n        }, _this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, _this);\n};\n\n_s2(RowSelectionTable, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n});\n\n_c3 = RowSelectionTable;\n\nvar RowSelection = function RowSelection() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Row Selection\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-3\",\n        children: \"Row Selection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 4\n      }, _this), /*#__PURE__*/_jsxDEV(RowSelectionTable, {\n        columns: tableColumns,\n        data: tableData.slice(0, 10)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 4\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 2\n  }, _this);\n};\n\n_c4 = RowSelection;\nexport default RowSelection;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"IndeterminateCheckbox$React.forwardRef\");\n$RefreshReg$(_c2, \"IndeterminateCheckbox\");\n$RefreshReg$(_c3, \"RowSelectionTable\");\n$RefreshReg$(_c4, \"RowSelection\");","map":{"version":3,"sources":["C:/Users/enliv/Desktop/appstack-react-2-master/src/pages/tables/RowSelection.tsx"],"names":["React","Helmet","useTable","useRowSelect","Card","Container","Table","tableData","tableColumns","IndeterminateCheckbox","forwardRef","ref","indeterminate","rest","defaultRef","useRef","resolvedRef","useEffect","current","RowSelectionTable","columns","data","hooks","visibleColumns","push","id","Header","getToggleAllRowsSelectedProps","Cell","row","getToggleRowSelectedProps","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","i","getRowProps","cells","cell","getCellProps","RowSelection","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useTable, useRowSelect } from \"react-table\";\r\n\r\nimport { Card, Container, Table } from \"react-bootstrap\";\r\n\r\nimport { tableData, tableColumns } from \"./data\";\r\n\r\nconst IndeterminateCheckbox = React.forwardRef<any>(\r\n\t({ indeterminate, ...rest }: any, ref) => {\r\n\t\tconst defaultRef = React.useRef();\r\n\t\tconst resolvedRef: any = ref || defaultRef;\r\n\r\n\t\tReact.useEffect(() => {\r\n\t\t\tresolvedRef.current.indeterminate = indeterminate;\r\n\t\t}, [resolvedRef, indeterminate]);\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t<input type=\"checkbox\" ref={resolvedRef} {...rest} />\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n);\r\n\r\nconst RowSelectionTable = ({ columns, data }) => {\r\n\tconst { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n\t\tuseTable(\r\n\t\t\t{\r\n\t\t\t\tcolumns,\r\n\t\t\t\tdata,\r\n\t\t\t},\r\n\t\t\tuseRowSelect,\r\n\t\t\t(hooks) => {\r\n\t\t\t\thooks.visibleColumns.push((columns) => [\r\n\t\t\t\t\t// Let's make a column for selection\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tid: \"selection\",\r\n\t\t\t\t\t\t// The header can use the table's getToggleAllRowsSelectedProps method\r\n\t\t\t\t\t\t// to render a checkbox\r\n\t\t\t\t\t\tHeader: ({ getToggleAllRowsSelectedProps }: any) => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<IndeterminateCheckbox {...getToggleAllRowsSelectedProps()} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t\t// The cell can use the individual row's getToggleRowSelectedProps method\r\n\t\t\t\t\t\t// to the render a checkbox\r\n\t\t\t\t\t\tCell: ({ row }) => (\r\n\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t<IndeterminateCheckbox {...(row as any).getToggleRowSelectedProps()} />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t),\r\n\t\t\t\t\t},\r\n\t\t\t\t\t...columns,\r\n\t\t\t\t]);\r\n\t\t\t}\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Card.Header>\r\n\t\t\t\t<Card.Title>Row Selection</Card.Title>\r\n\t\t\t\t<h6 className=\"card-subtitle text-muted\">\r\n\t\t\t\t\tRow selection by react-table\r\n\t\t\t\t</h6>\r\n\t\t\t</Card.Header>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Table striped bordered {...getTableProps()}>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t{headerGroups.map((headerGroup) => (\r\n\t\t\t\t\t\t\t<tr {...headerGroup.getHeaderGroupProps()}>\r\n\t\t\t\t\t\t\t\t{headerGroup.headers.map((column) => (\r\n\t\t\t\t\t\t\t\t\t<th {...column.getHeaderProps()}>\r\n\t\t\t\t\t\t\t\t\t\t{column.render(\"Header\")}\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody {...getTableBodyProps()}>\r\n\t\t\t\t\t\t{rows.map((row, i) => {\r\n\t\t\t\t\t\t\tprepareRow(row);\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr {...row.getRowProps()}>\r\n\t\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nconst RowSelection = () => (\r\n\t<React.Fragment>\r\n\t\t<Helmet title=\"Row Selection\" />\r\n\t\t<Container fluid className=\"p-0\">\r\n\t\t\t<h1 className=\"h3 mb-3\">Row Selection</h1>\r\n\r\n\t\t\t<RowSelectionTable columns={tableColumns} data={tableData.slice(0, 10)} />\r\n\t\t</Container>\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default RowSelection;\r\n"]},"metadata":{},"sourceType":"module"}