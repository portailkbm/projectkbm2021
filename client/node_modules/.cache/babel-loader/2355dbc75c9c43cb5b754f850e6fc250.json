{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\enliv\\\\Desktop\\\\appstack-react-2-master\\\\src\\\\pages\\\\docs\\\\ESLintAndPrettier.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Code from \"../../components/Code\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Intro = function Intro() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Introduction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"To format code automatically, we've included a basic ESLint & Prettier configuration. ESLint statically analyzes your code to quickly find problems. Prettier is used to automatically format the code you write to ensure a consistent code style withing your projects.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"Included ESLint configuration:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"{\\n\\t\\\"extends\\\": [\\\"react-app\\\", \\\"prettier\\\"],\\n\\t\\\"plugins\\\": [\\\"prettier\\\"],\\n\\t\\\"rules\\\": {\\n\\t\\t\\\"prettier/prettier\\\": \\\"error\\\"\\n\\t}\\n}\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 2\n  }, _this);\n};\n\n_c = Intro;\n\nvar Usage = function Usage() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Usage\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"Format all source files in the /src folder:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"npm run lint\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 2\n  }, _this);\n};\n\n_c2 = Usage;\n\nvar VSCodeIntegration = function VSCodeIntegration() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"VSCode integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [\"To use ESLint & Prettier in combination with VSCode, we suggest installing the\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        href: \"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\",\n        children: \"VSCode ESLint extension\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 4\n      }, _this), \". After installing the extension, the code will automatically be formatted. The following configuration is included, which can be enabled/disabled or adjusted to your needs.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"{\\n\\t\\\"editor.defaultFormatter\\\": \\\"esbenp.prettier-vscode\\\",\\n\\t\\\"editor.formatOnType\\\": true,\\n\\t\\\"editor.formatOnSave\\\": true,\\n\\t\\\"editor.formatOnPaste\\\": true,\\n\\t\\\"editor.codeActionsOnSave\\\": {\\n\\t\\t\\\"source.fixAll.eslint\\\": true\\n\\t}\\n}\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 2\n  }, _this);\n};\n\n_c3 = VSCodeIntegration;\n\nvar ESLintAndPrettier = function ESLintAndPrettier() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Support\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 10,\n          xl: 8,\n          className: \"col-xxl-7 mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"ESLint & Prettier\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 6\n          }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 6\n          }, _this), /*#__PURE__*/_jsxDEV(Intro, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 6\n          }, _this), /*#__PURE__*/_jsxDEV(Usage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 6\n          }, _this), /*#__PURE__*/_jsxDEV(VSCodeIntegration, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 6\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 5\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 4\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 2\n  }, _this);\n};\n\n_c4 = ESLintAndPrettier;\nexport default ESLintAndPrettier;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Intro\");\n$RefreshReg$(_c2, \"Usage\");\n$RefreshReg$(_c3, \"VSCodeIntegration\");\n$RefreshReg$(_c4, \"ESLintAndPrettier\");","map":{"version":3,"sources":["C:/Users/enliv/Desktop/appstack-react-2-master/src/pages/docs/ESLintAndPrettier.tsx"],"names":["React","Helmet","Col","Container","Row","Code","Intro","Usage","VSCodeIntegration","ESLintAndPrettier"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,oBAAvB;AACA,SAASC,GAAT,EAAcC,SAAd,EAAyBC,GAAzB,QAAoC,iBAApC;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,sBACb;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,eAEC;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFD,eAQC;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aARD,eAUC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAVD;AAAA;AAAA;AAAA;AAAA;AAAA,WADa;AAAA,CAAd;;KAAMA,K;;AAqBN,IAAMC,KAAK,GAAG,SAARA,KAAQ;AAAA,sBACb;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,eAEC;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFD,eAIC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAJD;AAAA;AAAA;AAAA;AAAA;AAAA,WADa;AAAA,CAAd;;MAAMA,K;;AASN,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,sBACzB;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,4BACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADD,eAEC;AAAG,MAAA,SAAS,EAAC,SAAb;AAAA,mGAEK,GAFL,eAGC;AACC,QAAA,MAAM,EAAC,QADR;AAEC,QAAA,GAAG,EAAC,qBAFL;AAGC,QAAA,IAAI,EAAC,4EAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAHD;AAAA;AAAA;AAAA;AAAA;AAAA,aAFD,eAiBC,QAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAjBD;AAAA;AAAA;AAAA;AAAA;AAAA,WADyB;AAAA,CAA1B;;MAAMA,iB;;AA8BN,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,sBACzB,QAAC,KAAD,CAAO,QAAP;AAAA,4BACC,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,aADD,eAEC,QAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAiB,MAAA,SAAS,EAAC,KAA3B;AAAA,6BACC,QAAC,GAAD;AAAA,+BACC,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,EAAT;AAAa,UAAA,EAAE,EAAE,CAAjB;AAAoB,UAAA,SAAS,EAAC,mBAA9B;AAAA,kCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADD,eAEC;AAAI,YAAA,SAAS,EAAC;AAAd;AAAA;AAAA;AAAA;AAAA,mBAFD,eAGC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,mBAHD,eAIC,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA,mBAJD,eAKC,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,mBALD;AAAA;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA;AADD;AAAA;AAAA;AAAA;AAAA,aAFD;AAAA;AAAA;AAAA;AAAA;AAAA,WADyB;AAAA,CAA1B;;MAAMA,iB;AAiBN,eAAeA,iBAAf","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport Code from \"../../components/Code\";\r\n\r\nconst Intro = () => (\r\n\t<div className=\"mb-5\">\r\n\t\t<h3>Introduction</h3>\r\n\t\t<p className=\"text-lg\">\r\n\t\t\tTo format code automatically, we've included a basic ESLint & Prettier\r\n\t\t\tconfiguration. ESLint statically analyzes your code to quickly find\r\n\t\t\tproblems. Prettier is used to automatically format the code you write to\r\n\t\t\tensure a consistent code style withing your projects.\r\n\t\t</p>\r\n\t\t<p className=\"text-lg\">Included ESLint configuration:</p>\r\n\r\n\t\t<Code>{`{\r\n\t\"extends\": [\"react-app\", \"prettier\"],\r\n\t\"plugins\": [\"prettier\"],\r\n\t\"rules\": {\r\n\t\t\"prettier/prettier\": \"error\"\r\n\t}\r\n}`}</Code>\r\n\t</div>\r\n);\r\n\r\nconst Usage = () => (\r\n\t<div className=\"mb-5\">\r\n\t\t<h3>Usage</h3>\r\n\t\t<p className=\"text-lg\">Format all source files in the /src folder:</p>\r\n\r\n\t\t<Code>npm run lint</Code>\r\n\t</div>\r\n);\r\n\r\nconst VSCodeIntegration = () => (\r\n\t<div className=\"mb-5\">\r\n\t\t<h3>VSCode integration</h3>\r\n\t\t<p className=\"text-lg\">\r\n\t\t\tTo use ESLint & Prettier in combination with VSCode, we suggest installing\r\n\t\t\tthe{\" \"}\r\n\t\t\t<a\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\trel=\"noreferrer noopener\"\r\n\t\t\t\thref=\"https://marketplace.visualstudio.com/items?itemName=dbaeumer.vscode-eslint\"\r\n\t\t\t>\r\n\t\t\t\tVSCode ESLint extension\r\n\t\t\t</a>\r\n\t\t\t. After installing the extension, the code will automatically be\r\n\t\t\tformatted. The following configuration is included, which can be\r\n\t\t\tenabled/disabled or adjusted to your needs.\r\n\t\t</p>\r\n\r\n\t\t<Code>{`{\r\n\t\"editor.defaultFormatter\": \"esbenp.prettier-vscode\",\r\n\t\"editor.formatOnType\": true,\r\n\t\"editor.formatOnSave\": true,\r\n\t\"editor.formatOnPaste\": true,\r\n\t\"editor.codeActionsOnSave\": {\r\n\t\t\"source.fixAll.eslint\": true\r\n\t}\r\n}`}</Code>\r\n\t</div>\r\n);\r\n\r\nconst ESLintAndPrettier = () => (\r\n\t<React.Fragment>\r\n\t\t<Helmet title=\"Support\" />\r\n\t\t<Container fluid className=\"p-0\">\r\n\t\t\t<Row>\r\n\t\t\t\t<Col lg={10} xl={8} className=\"col-xxl-7 mx-auto\">\r\n\t\t\t\t\t<h1>ESLint &amp; Prettier</h1>\r\n\t\t\t\t\t<hr className=\"my-4\" />\r\n\t\t\t\t\t<Intro />\r\n\t\t\t\t\t<Usage />\r\n\t\t\t\t\t<VSCodeIntegration />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default ESLintAndPrettier;\r\n"]},"metadata":{},"sourceType":"module"}