{"ast":null,"code":"import _toConsumableArray from \"C:/Users/enliv/Desktop/appstack-react-2-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"C:/Users/enliv/Desktop/appstack-react-2-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\enliv\\\\Desktop\\\\appstack-react-2-master\\\\src\\\\pages\\\\tables\\\\RowExpanding.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useTable, useExpanded } from \"react-table\";\nimport { Card, Container, Table } from \"react-bootstrap\";\nimport { PlusCircle, MinusCircle } from \"react-feather\";\nimport { tableData, tableColumns } from \"./data\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar RowExpandingTable = function RowExpandingTable(_ref) {\n  _s();\n\n  var userColumns = _ref.columns,\n      data = _ref.data;\n\n  var _useTable = useTable({\n    columns: userColumns,\n    data: data\n  }, useExpanded // Use the useExpanded plugin hook\n  ),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow;\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"Row Expanding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 5\n      }, _this), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        children: \"Expandable rows by react-table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 5\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 4\n    }, _this), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Table, _objectSpread(_objectSpread({\n        striped: true,\n        bordered: true\n      }, getTableProps()), {}, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(function (headerGroup) {\n            return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n              children: headerGroup.headers.map(function (column) {\n                return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n                  children: column.render(\"Header\")\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 10\n                }, _this);\n              })\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 8\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n          children: rows.map(function (row, i) {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n              children: row.cells.map(function (cell) {\n                return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                  children: cell.render(\"Cell\")\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 12\n                }, _this);\n              })\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 9\n            }, _this);\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 6\n        }, _this)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 5\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 4\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 3\n  }, _this);\n};\n\n_s(RowExpandingTable, \"T5U6FpG7qNL2+V8iGF3ne+5qi0g=\", false, function () {\n  return [useTable];\n});\n\n_c = RowExpandingTable;\nvar tableColumnsExpandable = [{\n  // Build our expander column\n  id: \"expander\",\n  // Make sure it has an ID\n  Header: function Header(_ref2) {\n    var getToggleAllRowsExpandedProps = _ref2.getToggleAllRowsExpandedProps,\n        isAllRowsExpanded = _ref2.isAllRowsExpanded;\n    return /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, getToggleAllRowsExpandedProps()), {}, {\n      children: isAllRowsExpanded ? /*#__PURE__*/_jsxDEV(MinusCircle, {\n        className: \"feather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 6\n      }, _this) : /*#__PURE__*/_jsxDEV(PlusCircle, {\n        className: \"feather\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 6\n      }, _this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 4\n    }, _this);\n  },\n  Cell: function Cell(_ref3) {\n    var row = _ref3.row;\n    return (// Use the row.canExpand and row.getToggleRowExpandedProps prop getter\n      // to build the toggle for expanding a row\n      row.canExpand ? /*#__PURE__*/_jsxDEV(\"span\", _objectSpread(_objectSpread({}, row.getToggleRowExpandedProps({\n        style: {\n          // We can even use the row.depth property\n          // and paddingLeft to indicate the depth\n          // of the row\n          paddingLeft: \"\".concat(row.depth * 2, \"rem\")\n        }\n      })), {}, {\n        children: row.isExpanded ? /*#__PURE__*/_jsxDEV(MinusCircle, {\n          className: \"feather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 7\n        }, _this) : /*#__PURE__*/_jsxDEV(PlusCircle, {\n          className: \"feather\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 5\n      }, _this) : null\n    );\n  }\n}].concat(_toConsumableArray(tableColumns));\n\nvar RowExpanding = function RowExpanding() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Row Expanding\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-3\",\n        children: \"Row Expanding\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 4\n      }, _this), /*#__PURE__*/_jsxDEV(RowExpandingTable, {\n        columns: tableColumnsExpandable,\n        data: tableData.slice(0, 10)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 4\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 2\n  }, _this);\n};\n\n_c2 = RowExpanding;\nexport default RowExpanding;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"RowExpandingTable\");\n$RefreshReg$(_c2, \"RowExpanding\");","map":{"version":3,"sources":["C:/Users/enliv/Desktop/appstack-react-2-master/src/pages/tables/RowExpanding.tsx"],"names":["React","Helmet","useTable","useExpanded","Card","Container","Table","PlusCircle","MinusCircle","tableData","tableColumns","RowExpandingTable","userColumns","columns","data","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","i","getRowProps","cells","cell","getCellProps","tableColumnsExpandable","id","Header","getToggleAllRowsExpandedProps","isAllRowsExpanded","Cell","canExpand","getToggleRowExpandedProps","style","paddingLeft","depth","isExpanded","RowExpanding","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useTable, useExpanded } from \"react-table\";\r\n\r\nimport { Card, Container, Table } from \"react-bootstrap\";\r\nimport { PlusCircle, MinusCircle } from \"react-feather\";\r\n\r\nimport { tableData, tableColumns } from \"./data\";\r\n\r\nconst RowExpandingTable = ({ columns: userColumns, data }) => {\r\n\tconst { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n\t\tuseTable(\r\n\t\t\t{\r\n\t\t\t\tcolumns: userColumns,\r\n\t\t\t\tdata,\r\n\t\t\t},\r\n\t\t\tuseExpanded // Use the useExpanded plugin hook\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Card.Header>\r\n\t\t\t\t<Card.Title>Row Expanding</Card.Title>\r\n\t\t\t\t<h6 className=\"card-subtitle text-muted\">\r\n\t\t\t\t\tExpandable rows by react-table\r\n\t\t\t\t</h6>\r\n\t\t\t</Card.Header>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Table striped bordered {...getTableProps()}>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t{headerGroups.map((headerGroup) => (\r\n\t\t\t\t\t\t\t<tr {...headerGroup.getHeaderGroupProps()}>\r\n\t\t\t\t\t\t\t\t{headerGroup.headers.map((column) => (\r\n\t\t\t\t\t\t\t\t\t<th {...column.getHeaderProps()}>\r\n\t\t\t\t\t\t\t\t\t\t{column.render(\"Header\")}\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody {...getTableBodyProps()}>\r\n\t\t\t\t\t\t{rows.map((row, i) => {\r\n\t\t\t\t\t\t\tprepareRow(row);\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr {...row.getRowProps()}>\r\n\t\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nconst tableColumnsExpandable = [\r\n\t{\r\n\t\t// Build our expander column\r\n\t\tid: \"expander\", // Make sure it has an ID\r\n\t\tHeader: ({ getToggleAllRowsExpandedProps, isAllRowsExpanded }) => (\r\n\t\t\t<span {...getToggleAllRowsExpandedProps()}>\r\n\t\t\t\t{isAllRowsExpanded ? (\r\n\t\t\t\t\t<MinusCircle className=\"feather\" />\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<PlusCircle className=\"feather\" />\r\n\t\t\t\t)}\r\n\t\t\t</span>\r\n\t\t),\r\n\t\tCell: ({ row }) =>\r\n\t\t\t// Use the row.canExpand and row.getToggleRowExpandedProps prop getter\r\n\t\t\t// to build the toggle for expanding a row\r\n\t\t\trow.canExpand ? (\r\n\t\t\t\t<span\r\n\t\t\t\t\t{...row.getToggleRowExpandedProps({\r\n\t\t\t\t\t\tstyle: {\r\n\t\t\t\t\t\t\t// We can even use the row.depth property\r\n\t\t\t\t\t\t\t// and paddingLeft to indicate the depth\r\n\t\t\t\t\t\t\t// of the row\r\n\t\t\t\t\t\t\tpaddingLeft: `${row.depth * 2}rem`,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t})}\r\n\t\t\t\t>\r\n\t\t\t\t\t{row.isExpanded ? (\r\n\t\t\t\t\t\t<MinusCircle className=\"feather\" />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<PlusCircle className=\"feather\" />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</span>\r\n\t\t\t) : null,\r\n\t},\r\n\t...tableColumns,\r\n];\r\n\r\nconst RowExpanding = () => (\r\n\t<React.Fragment>\r\n\t\t<Helmet title=\"Row Expanding\" />\r\n\t\t<Container fluid className=\"p-0\">\r\n\t\t\t<h1 className=\"h3 mb-3\">Row Expanding</h1>\r\n\r\n\t\t\t<RowExpandingTable\r\n\t\t\t\tcolumns={tableColumnsExpandable}\r\n\t\t\t\tdata={tableData.slice(0, 10)}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default RowExpanding;\r\n"]},"metadata":{},"sourceType":"module"}