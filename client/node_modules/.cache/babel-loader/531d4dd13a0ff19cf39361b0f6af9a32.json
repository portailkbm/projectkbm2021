{"ast":null,"code":"import _objectSpread from \"C:/Users/enliv/Desktop/appstack-react-2-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"C:/Users/enliv/Desktop/appstack-react-2-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"C:/Users/enliv/Desktop/appstack-react-2-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\enliv\\\\Desktop\\\\appstack-react-2-master\\\\src\\\\pages\\\\tables\\\\ColumnFiltering.tsx\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _this2 = this,\n    _s3 = $RefreshSig$();\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useTable, useFilters, useGlobalFilter } from \"react-table\";\nimport { Card, Container, Table, Form } from \"react-bootstrap\";\nimport { tableData } from \"./data\"; // This is a custom UI for our 'between' or number range\n// filter. It uses two number boxes and filters rows to\n// ones that have values between the two\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction NumberRangeColumnFilter(_ref) {\n  _s();\n\n  var _ref$column = _ref.column,\n      _ref$column$filterVal = _ref$column.filterValue,\n      filterValue = _ref$column$filterVal === void 0 ? [] : _ref$column$filterVal,\n      preFilteredRows = _ref$column.preFilteredRows,\n      setFilter = _ref$column.setFilter,\n      id = _ref$column.id;\n\n  var _React$useMemo = React.useMemo(function () {\n    var min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    var max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\n    preFilteredRows.forEach(function (row) {\n      min = Math.min(row.values[id], min);\n      max = Math.max(row.values[id], max);\n    });\n    return [min, max];\n  }, [id, preFilteredRows]),\n      _React$useMemo2 = _slicedToArray(_React$useMemo, 2),\n      min = _React$useMemo2[0],\n      max = _React$useMemo2[1];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"d-flex mt-2\",\n    children: [/*#__PURE__*/_jsxDEV(Form.Control, {\n      value: filterValue[0] || \"\",\n      type: \"number\",\n      onChange: function onChange(e) {\n        var val = e.target.value;\n        setFilter(function () {\n          var old = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          return [val ? parseInt(val, 10) : undefined, old[1]];\n        });\n      },\n      placeholder: \"Min (\".concat(min, \")\"),\n      style: {\n        width: \"110px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"mx-2 mt-1\",\n      children: \"to\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n      value: filterValue[1] || \"\",\n      type: \"number\",\n      onChange: function onChange(e) {\n        var val = e.target.value;\n        setFilter(function () {\n          var old = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n          return [old[0], val ? parseInt(val, 10) : undefined];\n        });\n      },\n      placeholder: \"Max (\".concat(max, \")\"),\n      style: {\n        width: \"110px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 3\n  }, this);\n} // This is a custom filter UI for selecting\n// a unique option from a list\n\n\n_s(NumberRangeColumnFilter, \"JjGt0968bxIn2DIWJAwn7XKKSys=\");\n\n_c = NumberRangeColumnFilter;\n\nfunction SelectColumnFilter(_ref2) {\n  _s2();\n\n  var _this = this;\n\n  var _ref2$column = _ref2.column,\n      filterValue = _ref2$column.filterValue,\n      setFilter = _ref2$column.setFilter,\n      preFilteredRows = _ref2$column.preFilteredRows,\n      id = _ref2$column.id;\n  // Calculate the options for filtering\n  // using the preFilteredRows\n  var options = React.useMemo(function () {\n    var options = new Set();\n    preFilteredRows.forEach(function (row) {\n      options.add(row.values[id]);\n    });\n    return _toConsumableArray(options.values());\n  }, [id, preFilteredRows]); // Render a multi-select box\n\n  return /*#__PURE__*/_jsxDEV(Form.Select, {\n    value: filterValue,\n    onChange: function onChange(e) {\n      setFilter(e.target.value || undefined);\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"option\", {\n      value: \"\",\n      children: \"All\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 4\n    }, this), options.map(function (option, i) {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option,\n        children: option\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 3\n  }, this);\n}\n\n_s2(SelectColumnFilter, \"UfleS4trXWGxzhzYTKqqYygmjCE=\");\n\n_c2 = SelectColumnFilter;\n\nfunction DefaultColumnFilter(_ref3) {\n  var _ref3$column = _ref3.column,\n      filterValue = _ref3$column.filterValue,\n      preFilteredRows = _ref3$column.preFilteredRows,\n      setFilter = _ref3$column.setFilter;\n  var count = preFilteredRows.length;\n  return /*#__PURE__*/_jsxDEV(Form.Control, {\n    value: filterValue || \"\",\n    onChange: function onChange(e) {\n      setFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\n    },\n    placeholder: \"Search \".concat(count, \" records...\"),\n    className: \"mt-2\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 3\n  }, this);\n}\n\n_c3 = DefaultColumnFilter;\n\nvar ColumnFilteringTable = function ColumnFilteringTable(_ref4) {\n  _s3();\n\n  var columns = _ref4.columns,\n      data = _ref4.data;\n  var filterTypes = React.useMemo(function () {\n    return {\n      // Or, override the default text filter to use\n      // \"startWith\"\n      text: function text(rows, id, filterValue) {\n        return rows.filter(function (row) {\n          var rowValue = row.values[id];\n          return rowValue !== undefined ? String(rowValue).toLowerCase().startsWith(String(filterValue).toLowerCase()) : true;\n        });\n      }\n    };\n  }, []);\n  var defaultColumn = React.useMemo(function () {\n    return {\n      // Let's set up our default Filter UI\n      Filter: DefaultColumnFilter\n    };\n  }, []);\n\n  var _useTable = useTable({\n    columns: columns,\n    data: data,\n    defaultColumn: defaultColumn // Be sure to pass the defaultColumn option\n    // filterTypes,\n\n  }, useFilters, // useFilters!\n  useGlobalFilter // useGlobalFilter!\n  ),\n      getTableProps = _useTable.getTableProps,\n      getTableBodyProps = _useTable.getTableBodyProps,\n      headerGroups = _useTable.headerGroups,\n      rows = _useTable.rows,\n      prepareRow = _useTable.prepareRow;\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    children: [/*#__PURE__*/_jsxDEV(Card.Header, {\n      children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n        children: \"Column Filtering\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 5\n      }, _this2), /*#__PURE__*/_jsxDEV(\"h6\", {\n        className: \"card-subtitle text-muted\",\n        children: \"Column filtering by react-table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 5\n      }, _this2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 4\n    }, _this2), /*#__PURE__*/_jsxDEV(Card.Body, {\n      children: /*#__PURE__*/_jsxDEV(Table, _objectSpread(_objectSpread({\n        striped: true,\n        bordered: true\n      }, getTableProps()), {}, {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: headerGroups.map(function (headerGroup) {\n            return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, headerGroup.getHeaderGroupProps()), {}, {\n              children: headerGroup.headers.map(function (column) {\n                return /*#__PURE__*/_jsxDEV(\"th\", _objectSpread(_objectSpread({}, column.getHeaderProps()), {}, {\n                  children: [column.render(\"Header\"), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: column.canFilter ? column.render(\"Filter\") : null\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 11\n                  }, _this2)]\n                }), void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 10\n                }, _this2);\n              })\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 8\n            }, _this2);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 6\n        }, _this2), /*#__PURE__*/_jsxDEV(\"tbody\", _objectSpread(_objectSpread({}, getTableBodyProps()), {}, {\n          children: rows.map(function (row, i) {\n            prepareRow(row);\n            return /*#__PURE__*/_jsxDEV(\"tr\", _objectSpread(_objectSpread({}, row.getRowProps()), {}, {\n              children: row.cells.map(function (cell) {\n                return /*#__PURE__*/_jsxDEV(\"td\", _objectSpread(_objectSpread({}, cell.getCellProps()), {}, {\n                  children: cell.render(\"Cell\")\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 12\n                }, _this2);\n              })\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 9\n            }, _this2);\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 6\n        }, _this2)]\n      }), void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 5\n      }, _this2)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 4\n    }, _this2)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 3\n  }, _this2);\n};\n\n_s3(ColumnFilteringTable, \"Ww+84E1Vh4YMPArZoHhPX3j+d1g=\", false, function () {\n  return [useTable];\n});\n\n_c4 = ColumnFilteringTable;\nvar tableColumns = [{\n  Header: \"Name\",\n  accessor: \"name\"\n}, {\n  Header: \"Position\",\n  accessor: \"position\",\n  Filter: SelectColumnFilter,\n  filter: \"includes\"\n}, {\n  Header: \"Office\",\n  accessor: \"office\",\n  Filter: SelectColumnFilter,\n  filter: \"includes\"\n}, {\n  Header: \"Age\",\n  accessor: \"age\",\n  Filter: NumberRangeColumnFilter,\n  filter: \"between\"\n}, {\n  Header: \"Start Date\",\n  accessor: \"startDate\"\n}, {\n  Header: \"Salary\",\n  accessor: \"salary\",\n  Filter: false\n}];\n\nvar ColumnFiltering = function ColumnFiltering() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Column Filtering\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 3\n    }, _this2), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"h3 mb-3\",\n        children: \"Column Filtering\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 4\n      }, _this2), /*#__PURE__*/_jsxDEV(ColumnFilteringTable, {\n        columns: tableColumns,\n        data: tableData.slice(0, 15)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 236,\n        columnNumber: 4\n      }, _this2)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 3\n    }, _this2)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 2\n  }, _this2);\n};\n\n_c5 = ColumnFiltering;\nexport default ColumnFiltering;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"NumberRangeColumnFilter\");\n$RefreshReg$(_c2, \"SelectColumnFilter\");\n$RefreshReg$(_c3, \"DefaultColumnFilter\");\n$RefreshReg$(_c4, \"ColumnFilteringTable\");\n$RefreshReg$(_c5, \"ColumnFiltering\");","map":{"version":3,"sources":["C:/Users/enliv/Desktop/appstack-react-2-master/src/pages/tables/ColumnFiltering.tsx"],"names":["React","Helmet","useTable","useFilters","useGlobalFilter","Card","Container","Table","Form","tableData","NumberRangeColumnFilter","column","filterValue","preFilteredRows","setFilter","id","useMemo","min","length","values","max","forEach","row","Math","e","val","target","value","old","parseInt","undefined","width","SelectColumnFilter","options","Set","add","map","option","i","DefaultColumnFilter","count","ColumnFilteringTable","columns","data","filterTypes","text","rows","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","getTableProps","getTableBodyProps","headerGroups","prepareRow","headerGroup","getHeaderGroupProps","headers","getHeaderProps","render","canFilter","getRowProps","cells","cell","getCellProps","tableColumns","Header","accessor","ColumnFiltering","slice"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { useTable, useFilters, useGlobalFilter } from \"react-table\";\r\n\r\nimport { Card, Container, Table, Form } from \"react-bootstrap\";\r\n\r\nimport { tableData } from \"./data\";\r\n\r\n// This is a custom UI for our 'between' or number range\r\n// filter. It uses two number boxes and filters rows to\r\n// ones that have values between the two\r\nfunction NumberRangeColumnFilter({\r\n\tcolumn: { filterValue = [], preFilteredRows, setFilter, id },\r\n}) {\r\n\tconst [min, max] = React.useMemo(() => {\r\n\t\tlet min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n\t\tlet max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0;\r\n\t\tpreFilteredRows.forEach((row) => {\r\n\t\t\tmin = Math.min(row.values[id], min);\r\n\t\t\tmax = Math.max(row.values[id], max);\r\n\t\t});\r\n\t\treturn [min, max];\r\n\t}, [id, preFilteredRows]);\r\n\r\n\treturn (\r\n\t\t<div className=\"d-flex mt-2\">\r\n\t\t\t<Form.Control\r\n\t\t\t\tvalue={filterValue[0] || \"\"}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tconst val = e.target.value;\r\n\t\t\t\t\tsetFilter((old = []) => [\r\n\t\t\t\t\t\tval ? parseInt(val, 10) : undefined,\r\n\t\t\t\t\t\told[1],\r\n\t\t\t\t\t]);\r\n\t\t\t\t}}\r\n\t\t\t\tplaceholder={`Min (${min})`}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: \"110px\",\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t\t<span className=\"mx-2 mt-1\">to</span>\r\n\t\t\t<Form.Control\r\n\t\t\t\tvalue={filterValue[1] || \"\"}\r\n\t\t\t\ttype=\"number\"\r\n\t\t\t\tonChange={(e) => {\r\n\t\t\t\t\tconst val = e.target.value;\r\n\t\t\t\t\tsetFilter((old = []) => [\r\n\t\t\t\t\t\told[0],\r\n\t\t\t\t\t\tval ? parseInt(val, 10) : undefined,\r\n\t\t\t\t\t]);\r\n\t\t\t\t}}\r\n\t\t\t\tplaceholder={`Max (${max})`}\r\n\t\t\t\tstyle={{\r\n\t\t\t\t\twidth: \"110px\",\r\n\t\t\t\t}}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\n// This is a custom filter UI for selecting\r\n// a unique option from a list\r\nfunction SelectColumnFilter({\r\n\tcolumn: { filterValue, setFilter, preFilteredRows, id },\r\n}) {\r\n\t// Calculate the options for filtering\r\n\t// using the preFilteredRows\r\n\tconst options = React.useMemo(() => {\r\n\t\tconst options = new Set();\r\n\t\tpreFilteredRows.forEach((row) => {\r\n\t\t\toptions.add(row.values[id]);\r\n\t\t});\r\n\t\treturn [...(options as any).values()];\r\n\t}, [id, preFilteredRows]);\r\n\r\n\t// Render a multi-select box\r\n\treturn (\r\n\t\t<Form.Select\r\n\t\t\tvalue={filterValue}\r\n\t\t\tonChange={(e) => {\r\n\t\t\t\tsetFilter((e.target as any).value || undefined);\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t<option value=\"\">All</option>\r\n\t\t\t{options.map((option, i) => (\r\n\t\t\t\t<option key={i} value={option}>\r\n\t\t\t\t\t{option}\r\n\t\t\t\t</option>\r\n\t\t\t))}\r\n\t\t</Form.Select>\r\n\t);\r\n}\r\n\r\nfunction DefaultColumnFilter({\r\n\tcolumn: { filterValue, preFilteredRows, setFilter },\r\n}) {\r\n\tconst count = preFilteredRows.length;\r\n\r\n\treturn (\r\n\t\t<Form.Control\r\n\t\t\tvalue={filterValue || \"\"}\r\n\t\t\tonChange={(e) => {\r\n\t\t\t\tsetFilter(e.target.value || undefined); // Set undefined to remove the filter entirely\r\n\t\t\t}}\r\n\t\t\tplaceholder={`Search ${count} records...`}\r\n\t\t\tclassName=\"mt-2\"\r\n\t\t/>\r\n\t);\r\n}\r\n\r\nconst ColumnFilteringTable = ({ columns, data }) => {\r\n\tconst filterTypes = React.useMemo(\r\n\t\t() => ({\r\n\t\t\t// Or, override the default text filter to use\r\n\t\t\t// \"startWith\"\r\n\t\t\ttext: (rows, id, filterValue) => {\r\n\t\t\t\treturn rows.filter((row) => {\r\n\t\t\t\t\tconst rowValue = row.values[id];\r\n\t\t\t\t\treturn rowValue !== undefined\r\n\t\t\t\t\t\t? String(rowValue)\r\n\t\t\t\t\t\t\t\t.toLowerCase()\r\n\t\t\t\t\t\t\t\t.startsWith(String(filterValue).toLowerCase())\r\n\t\t\t\t\t\t: true;\r\n\t\t\t\t});\r\n\t\t\t},\r\n\t\t}),\r\n\t\t[]\r\n\t);\r\n\r\n\tconst defaultColumn = React.useMemo(\r\n\t\t() => ({\r\n\t\t\t// Let's set up our default Filter UI\r\n\t\t\tFilter: DefaultColumnFilter,\r\n\t\t}),\r\n\t\t[]\r\n\t);\r\n\r\n\tconst { getTableProps, getTableBodyProps, headerGroups, rows, prepareRow } =\r\n\t\tuseTable(\r\n\t\t\t{\r\n\t\t\t\tcolumns,\r\n\t\t\t\tdata,\r\n\t\t\t\tdefaultColumn: defaultColumn as any, // Be sure to pass the defaultColumn option\r\n\t\t\t\t// filterTypes,\r\n\t\t\t},\r\n\t\t\tuseFilters, // useFilters!\r\n\t\t\tuseGlobalFilter // useGlobalFilter!\r\n\t\t);\r\n\r\n\treturn (\r\n\t\t<Card>\r\n\t\t\t<Card.Header>\r\n\t\t\t\t<Card.Title>Column Filtering</Card.Title>\r\n\t\t\t\t<h6 className=\"card-subtitle text-muted\">\r\n\t\t\t\t\tColumn filtering by react-table\r\n\t\t\t\t</h6>\r\n\t\t\t</Card.Header>\r\n\t\t\t<Card.Body>\r\n\t\t\t\t<Table striped bordered {...getTableProps()}>\r\n\t\t\t\t\t<thead>\r\n\t\t\t\t\t\t{headerGroups.map((headerGroup) => (\r\n\t\t\t\t\t\t\t<tr {...headerGroup.getHeaderGroupProps()}>\r\n\t\t\t\t\t\t\t\t{headerGroup.headers.map((column) => (\r\n\t\t\t\t\t\t\t\t\t<th {...column.getHeaderProps()}>\r\n\t\t\t\t\t\t\t\t\t\t{column.render(\"Header\")}\r\n\t\t\t\t\t\t\t\t\t\t{/* Render the columns filter UI */}\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t{(column as any).canFilter ? column.render(\"Filter\") : null}\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</th>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</thead>\r\n\t\t\t\t\t<tbody {...getTableBodyProps()}>\r\n\t\t\t\t\t\t{rows.map((row, i) => {\r\n\t\t\t\t\t\t\tprepareRow(row);\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<tr {...row.getRowProps()}>\r\n\t\t\t\t\t\t\t\t\t{row.cells.map((cell) => {\r\n\t\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t\t<td {...cell.getCellProps()}>{cell.render(\"Cell\")}</td>\r\n\t\t\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</tbody>\r\n\t\t\t\t</Table>\r\n\t\t\t</Card.Body>\r\n\t\t</Card>\r\n\t);\r\n};\r\n\r\nconst tableColumns = [\r\n\t{\r\n\t\tHeader: \"Name\",\r\n\t\taccessor: \"name\",\r\n\t},\r\n\t{\r\n\t\tHeader: \"Position\",\r\n\t\taccessor: \"position\",\r\n\t\tFilter: SelectColumnFilter,\r\n\t\tfilter: \"includes\",\r\n\t},\r\n\t{\r\n\t\tHeader: \"Office\",\r\n\t\taccessor: \"office\",\r\n\t\tFilter: SelectColumnFilter,\r\n\t\tfilter: \"includes\",\r\n\t},\r\n\t{\r\n\t\tHeader: \"Age\",\r\n\t\taccessor: \"age\",\r\n\t\tFilter: NumberRangeColumnFilter,\r\n\t\tfilter: \"between\",\r\n\t},\r\n\t{\r\n\t\tHeader: \"Start Date\",\r\n\t\taccessor: \"startDate\",\r\n\t},\r\n\t{\r\n\t\tHeader: \"Salary\",\r\n\t\taccessor: \"salary\",\r\n\t\tFilter: false,\r\n\t},\r\n];\r\n\r\nconst ColumnFiltering = () => (\r\n\t<React.Fragment>\r\n\t\t<Helmet title=\"Column Filtering\" />\r\n\t\t<Container fluid className=\"p-0\">\r\n\t\t\t<h1 className=\"h3 mb-3\">Column Filtering</h1>\r\n\r\n\t\t\t<ColumnFilteringTable\r\n\t\t\t\tcolumns={tableColumns}\r\n\t\t\t\tdata={tableData.slice(0, 15)}\r\n\t\t\t/>\r\n\t\t</Container>\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default ColumnFiltering;\r\n"]},"metadata":{},"sourceType":"module"}