{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\enliv\\\\Desktop\\\\appstack-react-2-master\\\\src\\\\pages\\\\docs\\\\Deployment.tsx\",\n    _this = this;\n\nimport React from \"react\";\nimport { Helmet } from \"react-helmet-async\";\nimport { Col, Container, Row } from \"react-bootstrap\";\nimport Code from \"../../components/Code\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar Intro = function Intro() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Introduction\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"npm run build\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 4\n      }, _this), \" creates a build directory with a production build of your app. Set up your favorite HTTP server so that a visitor to your site is served index.html, and requests to static paths like\", \" \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"/static/js/main.<hash>.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 4\n      }, _this), \" are served with the contents of the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"/static/js/main.<hash>.js\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 8\n      }, _this), \" file.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 2\n  }, _this);\n};\n\n_c = Intro;\n\nvar StaticServer = function StaticServer() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Static Server\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [\"For environments using\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://nodejs.org/en/\",\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        children: \"Node\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 4\n      }, _this), \", the easiest way to handle this would be to install\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/zeit/serve\",\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        children: \"serve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 4\n      }, _this), \" \", \"and let it handle the rest:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"npm install -g serve\\nserve -s build\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [\"The last command shown above will serve your static site on the port 5000. Like many of\", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/vercel/serve\",\n        target: \"_blank\",\n        rel: \"noreferrer noopener\",\n        children: \"serve\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 4\n      }, _this), \"\\u2019s internal settings, the port can be adjusted using the \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"-l\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 61\n      }, _this), \" \", \"or \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"--listen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }, _this), \" flags:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"serve -s build -l 4000\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"Run this command to get a full list of the options available:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"serve -h\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 2\n  }, _this);\n};\n\n_c2 = StaticServer;\n\nvar OtherSolutions = function OtherSolutions() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Other Solutions\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"You don\\u2019t necessarily need a static server in order to run a Create React App project in production. It also works well when integrated into an existing server side app.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 2\n  }, _this);\n};\n\n_c3 = OtherSolutions;\n\nvar Express = function Express() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Express\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"Express is a fast, unopinionated, minimalist web framework for Node.js. Here\\u2019s a programmatic example:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"const express = require('express');\\nconst path = require('path');\\nconst app = express();\\napp.use(express.static(path.join(__dirname, 'build')));\\napp.get('/', function(req, res) {\\n\\tres.sendFile(path.join(__dirname, 'build', 'index.html'));\\n});\\napp.listen(9000);\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 2\n  }, _this);\n};\n\n_c4 = Express;\n\nvar Netlify = function Netlify() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      children: \"Netlify\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"Deploy modern static websites with Netlify. Get CDN, Continuous deployment, 1-click HTTPS, and all the services you need.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: \"To do a manual deploy to Netlify\\u2019s CDN:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(Code, {\n      children: \"npm install netlify-cli -g\\nnetlify deploy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [\"Choose \", /*#__PURE__*/_jsxDEV(\"code\", {\n        children: \"build\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, _this), \" as the path to deploy.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-lg\",\n      children: [\"To setup continuous delivery:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 4\n      }, _this), \"With this setup Netlify will build and deploy when you push to git or open a pull request:\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(\"ol\", {\n      className: \"text-lg\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://app.netlify.com/signup\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Start a new netlify project\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 5\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 4\n      }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: \"Pick your Git hosting service and select your repository\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 4\n      }, _this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"Click \", /*#__PURE__*/_jsxDEV(\"code\", {\n          children: \"Build your site\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 4\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 2\n  }, _this);\n};\n\n_c5 = Netlify;\n\nvar Deployment = function Deployment() {\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      title: \"Deployment\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 3\n    }, _this), /*#__PURE__*/_jsxDEV(Container, {\n      fluid: true,\n      className: \"p-0\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          lg: 10,\n          xl: 8,\n          className: \"col-xxl-7 mx-auto\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Deployment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 6\n          }, _this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            className: \"my-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 6\n          }, _this), /*#__PURE__*/_jsxDEV(Intro, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 6\n          }, _this), /*#__PURE__*/_jsxDEV(StaticServer, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 6\n          }, _this), /*#__PURE__*/_jsxDEV(OtherSolutions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 6\n          }, _this), /*#__PURE__*/_jsxDEV(Express, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 6\n          }, _this), /*#__PURE__*/_jsxDEV(Netlify, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 6\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 5\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 4\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 3\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 135,\n    columnNumber: 2\n  }, _this);\n};\n\n_c6 = Deployment;\nexport default Deployment;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Intro\");\n$RefreshReg$(_c2, \"StaticServer\");\n$RefreshReg$(_c3, \"OtherSolutions\");\n$RefreshReg$(_c4, \"Express\");\n$RefreshReg$(_c5, \"Netlify\");\n$RefreshReg$(_c6, \"Deployment\");","map":{"version":3,"sources":["C:/Users/enliv/Desktop/appstack-react-2-master/src/pages/docs/Deployment.tsx"],"names":["React","Helmet","Col","Container","Row","Code","Intro","StaticServer","OtherSolutions","Express","Netlify","Deployment"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { Helmet } from \"react-helmet-async\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\n\r\nimport Code from \"../../components/Code\";\r\n\r\nconst Intro = () => (\r\n\t<div className=\"mb-5\">\r\n\t\t<h3>Introduction</h3>\r\n\t\t<p className=\"text-lg\">\r\n\t\t\t<code>npm run build</code> creates a build directory with a production\r\n\t\t\tbuild of your app. Set up your favorite HTTP server so that a visitor to\r\n\t\t\tyour site is served index.html, and requests to static paths like{\" \"}\r\n\t\t\t<code>{`/static/js/main.<hash>.js`}</code> are served with the contents of\r\n\t\t\tthe <code>{`/static/js/main.<hash>.js`}</code> file.\r\n\t\t</p>\r\n\t</div>\r\n);\r\n\r\nconst StaticServer = () => (\r\n\t<div className=\"mb-5\">\r\n\t\t<h3>Static Server</h3>\r\n\t\t<p className=\"text-lg\">\r\n\t\t\tFor environments using{\" \"}\r\n\t\t\t<a\r\n\t\t\t\thref=\"https://nodejs.org/en/\"\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\trel=\"noreferrer noopener\"\r\n\t\t\t>\r\n\t\t\t\tNode\r\n\t\t\t</a>\r\n\t\t\t, the easiest way to handle this would be to install{\" \"}\r\n\t\t\t<a\r\n\t\t\t\thref=\"https://github.com/zeit/serve\"\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\trel=\"noreferrer noopener\"\r\n\t\t\t>\r\n\t\t\t\tserve\r\n\t\t\t</a>{\" \"}\r\n\t\t\tand let it handle the rest:\r\n\t\t</p>\r\n\t\t<Code>{`npm install -g serve\r\nserve -s build`}</Code>\r\n\r\n\t\t<p className=\"text-lg\">\r\n\t\t\tThe last command shown above will serve your static site on the port 5000.\r\n\t\t\tLike many of\r\n\t\t\t<a\r\n\t\t\t\thref=\"https://github.com/vercel/serve\"\r\n\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\trel=\"noreferrer noopener\"\r\n\t\t\t>\r\n\t\t\t\tserve\r\n\t\t\t</a>\r\n\t\t\t’s internal settings, the port can be adjusted using the <code>-l</code>{\" \"}\r\n\t\t\tor <code>--listen</code> flags:\r\n\t\t</p>\r\n\t\t<Code>serve -s build -l 4000</Code>\r\n\r\n\t\t<p className=\"text-lg\">\r\n\t\t\tRun this command to get a full list of the options available:\r\n\t\t</p>\r\n\t\t<Code>serve -h</Code>\r\n\t</div>\r\n);\r\n\r\nconst OtherSolutions = () => (\r\n\t<div className=\"mb-5\">\r\n\t\t<h3>Other Solutions</h3>\r\n\t\t<p className=\"text-lg\">\r\n\t\t\tYou don’t necessarily need a static server in order to run a Create React\r\n\t\t\tApp project in production. It also works well when integrated into an\r\n\t\t\texisting server side app.\r\n\t\t</p>\r\n\t</div>\r\n);\r\n\r\nconst Express = () => (\r\n\t<div className=\"mb-5\">\r\n\t\t<h4>Express</h4>\r\n\t\t<p className=\"text-lg\">\r\n\t\t\tExpress is a fast, unopinionated, minimalist web framework for Node.js.\r\n\t\t\tHere’s a programmatic example:\r\n\t\t</p>\r\n\t\t<Code>{`const express = require('express');\r\nconst path = require('path');\r\nconst app = express();\r\napp.use(express.static(path.join(__dirname, 'build')));\r\napp.get('/', function(req, res) {\r\n\tres.sendFile(path.join(__dirname, 'build', 'index.html'));\r\n});\r\napp.listen(9000);`}</Code>\r\n\t</div>\r\n);\r\n\r\nconst Netlify = () => (\r\n\t<div className=\"mb-5\">\r\n\t\t<h4>Netlify</h4>\r\n\t\t<p className=\"text-lg\">\r\n\t\t\tDeploy modern static websites with Netlify. Get CDN, Continuous\r\n\t\t\tdeployment, 1-click HTTPS, and all the services you need.\r\n\t\t</p>\r\n\t\t<p className=\"text-lg\">To do a manual deploy to Netlify’s CDN:</p>\r\n\t\t<Code>{`npm install netlify-cli -g\r\nnetlify deploy`}</Code>\r\n\r\n\t\t<p className=\"text-lg\">\r\n\t\t\tChoose <code>build</code> as the path to deploy.\r\n\t\t</p>\r\n\t\t<p className=\"text-lg\">\r\n\t\t\tTo setup continuous delivery:\r\n\t\t\t<br />\r\n\t\t\tWith this setup Netlify will build and deploy when you push to git or open\r\n\t\t\ta pull request:\r\n\t\t</p>\r\n\t\t<ol className=\"text-lg\">\r\n\t\t\t<li>\r\n\t\t\t\t<a\r\n\t\t\t\t\thref=\"https://app.netlify.com/signup\"\r\n\t\t\t\t\ttarget=\"_blank\"\r\n\t\t\t\t\trel=\"noopener noreferrer\"\r\n\t\t\t\t>\r\n\t\t\t\t\tStart a new netlify project\r\n\t\t\t\t</a>\r\n\t\t\t</li>\r\n\t\t\t<li>Pick your Git hosting service and select your repository</li>\r\n\t\t\t<li>\r\n\t\t\t\tClick <code>Build your site</code>\r\n\t\t\t</li>\r\n\t\t</ol>\r\n\t</div>\r\n);\r\n\r\nconst Deployment = () => (\r\n\t<React.Fragment>\r\n\t\t<Helmet title=\"Deployment\" />\r\n\t\t<Container fluid className=\"p-0\">\r\n\t\t\t<Row>\r\n\t\t\t\t<Col lg={10} xl={8} className=\"col-xxl-7 mx-auto\">\r\n\t\t\t\t\t<h1>Deployment</h1>\r\n\t\t\t\t\t<hr className=\"my-4\" />\r\n\t\t\t\t\t<Intro />\r\n\t\t\t\t\t<StaticServer />\r\n\t\t\t\t\t<OtherSolutions />\r\n\t\t\t\t\t<Express />\r\n\t\t\t\t\t<Netlify />\r\n\t\t\t\t</Col>\r\n\t\t\t</Row>\r\n\t\t</Container>\r\n\t</React.Fragment>\r\n);\r\n\r\nexport default Deployment;\r\n"]},"metadata":{},"sourceType":"module"}