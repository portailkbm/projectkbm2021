{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/enliv/Desktop/appstack-react-2-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/enliv/Desktop/appstack-react-2-master/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\enliv\\\\Desktop\\\\appstack-react-2-master\\\\src\\\\components\\\\auth\\\\ResetPassword.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as Yup from \"yup\";\nimport { Formik } from \"formik\";\nimport { Alert, Button, Form } from \"react-bootstrap\";\nimport useAuth from \"../../hooks/useAuth\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ResetPassword() {\n  _s();\n\n  var _this = this;\n\n  var navigate = useNavigate();\n\n  var _useAuth = useAuth(),\n      resetPassword = _useAuth.resetPassword;\n\n  return /*#__PURE__*/_jsxDEV(Formik, {\n    initialValues: {\n      email: \"\",\n      submit: false\n    },\n    validationSchema: Yup.object().shape({\n      email: Yup.string().email(\"Must be a valid email\").max(255).required(\"Email is required\")\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref) {\n        var setErrors, setStatus, setSubmitting, message;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setErrors = _ref.setErrors, setStatus = _ref.setStatus, setSubmitting = _ref.setSubmitting;\n\n                try {\n                  resetPassword(values.email);\n                  navigate(\"/auth/sign-in\");\n                } catch (error) {\n                  message = error.message || \"Something went wrong\";\n                  setStatus({\n                    success: false\n                  });\n                  setErrors({\n                    submit: message\n                  });\n                  setSubmitting(false);\n                }\n\n              case 2:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }(),\n    children: function children(_ref3) {\n      var errors = _ref3.errors,\n          handleBlur = _ref3.handleBlur,\n          handleChange = _ref3.handleChange,\n          handleSubmit = _ref3.handleSubmit,\n          isSubmitting = _ref3.isSubmitting,\n          touched = _ref3.touched,\n          values = _ref3.values;\n      return /*#__PURE__*/_jsxDEV(Form, {\n        onSubmit: handleSubmit,\n        children: [errors.submit && /*#__PURE__*/_jsxDEV(Alert, {\n          className: \"my-3\",\n          variant: \"danger\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert-message\",\n            children: errors.submit\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 8\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 7\n        }, _this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 7\n          }, _this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            name: \"email\",\n            placeholder: \"Email Address\",\n            value: values.email,\n            isInvalid: Boolean(touched.email && errors.email),\n            onBlur: handleBlur,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 7\n          }, _this), !!touched.email && /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n            type: \"invalid\",\n            children: errors.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 8\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 6\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-3\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"primary\",\n            size: \"lg\",\n            disabled: isSubmitting,\n            children: \"Reset password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 7\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 6\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 5\n      }, _this);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 3\n  }, this);\n}\n\n_s(ResetPassword, \"rChDAI1Y7Ia/e7J0rU6kW2dS89Q=\", false, function () {\n  return [useNavigate, useAuth];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/enliv/Desktop/appstack-react-2-master/src/components/auth/ResetPassword.tsx"],"names":["React","useNavigate","Yup","Formik","Alert","Button","Form","useAuth","ResetPassword","navigate","resetPassword","email","submit","object","shape","string","max","required","values","setErrors","setStatus","setSubmitting","error","message","success","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","Boolean"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as Yup from \"yup\";\r\nimport { Formik } from \"formik\";\r\nimport { Alert, Button, Form } from \"react-bootstrap\";\r\n\r\nimport useAuth from \"../../hooks/useAuth\";\r\n\r\nfunction ResetPassword() {\r\n\tconst navigate = useNavigate();\r\n\tconst { resetPassword } = useAuth();\r\n\r\n\treturn (\r\n\t\t<Formik\r\n\t\t\tinitialValues={{\r\n\t\t\t\temail: \"\",\r\n\t\t\t\tsubmit: false,\r\n\t\t\t}}\r\n\t\t\tvalidationSchema={Yup.object().shape({\r\n\t\t\t\temail: Yup.string()\r\n\t\t\t\t\t.email(\"Must be a valid email\")\r\n\t\t\t\t\t.max(255)\r\n\t\t\t\t\t.required(\"Email is required\"),\r\n\t\t\t})}\r\n\t\t\tonSubmit={async (values, { setErrors, setStatus, setSubmitting }) => {\r\n\t\t\t\ttry {\r\n\t\t\t\t\tresetPassword(values.email);\r\n\t\t\t\t\tnavigate(\"/auth/sign-in\");\r\n\t\t\t\t} catch (error: any) {\r\n\t\t\t\t\tconst message = error.message || \"Something went wrong\";\r\n\r\n\t\t\t\t\tsetStatus({ success: false });\r\n\t\t\t\t\tsetErrors({ submit: message });\r\n\t\t\t\t\tsetSubmitting(false);\r\n\t\t\t\t}\r\n\t\t\t}}\r\n\t\t>\r\n\t\t\t{({\r\n\t\t\t\terrors,\r\n\t\t\t\thandleBlur,\r\n\t\t\t\thandleChange,\r\n\t\t\t\thandleSubmit,\r\n\t\t\t\tisSubmitting,\r\n\t\t\t\ttouched,\r\n\t\t\t\tvalues,\r\n\t\t\t}) => (\r\n\t\t\t\t<Form onSubmit={handleSubmit}>\r\n\t\t\t\t\t{errors.submit && (\r\n\t\t\t\t\t\t<Alert className=\"my-3\" variant=\"danger\">\r\n\t\t\t\t\t\t\t<div className=\"alert-message\">{errors.submit}</div>\r\n\t\t\t\t\t\t</Alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t<Form.Group className=\"mb-3\">\r\n\t\t\t\t\t\t<Form.Label>Email</Form.Label>\r\n\t\t\t\t\t\t<Form.Control\r\n\t\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\t\tname=\"email\"\r\n\t\t\t\t\t\t\tplaceholder=\"Email Address\"\r\n\t\t\t\t\t\t\tvalue={values.email}\r\n\t\t\t\t\t\t\tisInvalid={Boolean(touched.email && errors.email)}\r\n\t\t\t\t\t\t\tonBlur={handleBlur}\r\n\t\t\t\t\t\t\tonChange={handleChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t{!!touched.email && (\r\n\t\t\t\t\t\t\t<Form.Control.Feedback type=\"invalid\">\r\n\t\t\t\t\t\t\t\t{errors.email}\r\n\t\t\t\t\t\t\t</Form.Control.Feedback>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Form.Group>\r\n\t\t\t\t\t<div className=\"text-center mt-3\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\tvariant=\"primary\"\r\n\t\t\t\t\t\t\tsize=\"lg\"\r\n\t\t\t\t\t\t\tdisabled={isSubmitting}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\tReset password\r\n\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Form>\r\n\t\t\t)}\r\n\t\t</Formik>\r\n\t);\r\n}\r\n\r\nexport default ResetPassword;\r\n"]},"metadata":{},"sourceType":"module"}